buildscript {
    ext.kotlin_version = '1.3.71'
    ext.android_support_version = '1.0.0'
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0-rc01'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
     id 'com.github.triplet.play' version '2.6.2'
    id 'com.gladed.androidgitversion' version '0.4.13'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.triplet.play'
apply plugin: 'jacoco'

if (!project.hasProperty("storeP12File")) {
    ext.storeP12File = file("/")
}

if (!project.hasProperty("storeServiceAccount")) {
    ext.storeServiceAccount = ""
}


android {
    compileSdkVersion 28
    flavorDimensions "main"

    lintOptions {
        disable 'InvalidPackage', 'MissingTranslation'
    }


    //noinspection GroovyMissingReturnStatement
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    defaultConfig {
        versionName "10.5.4"
        versionCode 10005004
        buildConfigField "String", "GIT_VERSION", "\"" + androidGitVersion.name() + "\""
        multiDexEnabled false
        minSdkVersion 21
        targetSdkVersion 28
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
                arg("room.expandProjection", "true")
            }
        }
    }

    productFlavors {
        dropbox {
            dimension "main"
            setApplicationId("nl.mpcjanssen.todotxtholo")
            manifestPlaceholders = [providerFlavour: "dropbox"]
        }
        cloudless {
            dimension "main"
            setApplicationId("nl.mpcjanssen.simpletask")
            manifestPlaceholders = [providerFlavour: "cloudless"]
        }
        nextcloud {
            dimension "main"
            setApplicationId("nl.mpcjanssen.simpletask.nextcloud")
            manifestPlaceholders = [providerFlavour: "nextcloud"]
        }
        dokuwiki {
            dimension "main"
            setApplicationId("nl.mpcjanssen.simpletask.dokuwiki")
            manifestPlaceholders = [providerFlavour: "dokuwiki"]
        }
        webdav {
            dimension "main"
            setApplicationId("nl.mpcjanssen.simpletask.webdav")
            manifestPlaceholders = [providerFlavour: "webdav"]
        }
    }

    signingConfigs {
        release {
            keyAlias = "mpcjanssen.nl"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
            versionNameSuffix = '-DEBUG'
            manifestPlaceholders = [providerBuildType: "debug"]
            testCoverageEnabled true
        }
        release {
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release
            setMinifyEnabled(true)
            proguardFile "proguard.txt"
            manifestPlaceholders = [providerBuildType: "release"]
        }
    }
    dexOptions {
        preDexLibraries = true
        javaMaxHeapSize "4g"
        dexInProcess = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    play {
        // ...

    }
}

play {
    serviceAccountEmail = storeServiceAccount
    serviceAccountCredentials = new File(System.getenv("HOME"), storeP12File)
    track = 'production' // or 'rollout' or 'beta' or 'alpha'
    userFraction = 1 // only necessary for 'rollout', in this case default is 1 (100% of the target)
    // uploadImages = true // uncomment to upload images using publishListing<Flavour>Release
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    google()
}

dependencies {
    dropboxImplementation 'com.dropbox.core:dropbox-core-sdk:3.0.6'
    implementation 'org.jetbrains.anko:anko-commons:0.10.8'
    nextcloudImplementation 'com.github.nextcloud:android-library:1.6.1'
    nextcloudImplementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.anko:anko-commons:0.10.8"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.legacy:legacy-support-v4:$android_support_version"
    implementation 'androidx.core:core:1.2.0'
    implementation "com.google.android.material:material:1.1.0"
//    implementation "androidx.preference:preference:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.room:room-runtime:2.2.5"

    // For Kotlin use kapt instead of annotationProcessor
    implementation 'com.atlassian.commonmark:commonmark:0.11.0'
    implementation 'com.darwinsys:hirondelle-date4j:1.5.1'
    implementation 'org.luaj:luaj-jse:3.0.1'
    implementation 'me.smichel.android:kpreferences:0.11.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation('androidx.test:runner:1.1.0-alpha4') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:rules:1.1.0-alpha4') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'
    def withoutJUnit = { exclude group: 'junit', module: 'junit' }
    dokuwikiImplementation 'org.apache.xmlrpc:xmlrpc-client:3.1.3', withoutJUnit
    webdavApi 'com.squareup.okhttp3:okhttp:4.3.1'
    webdavImplementation ('org.simpleframework:simple-xml:2.7.1')  {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
}

// Only sign if we have keystore properties in the gradle.properties in ~/.gradle
if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = new File(System.getenv("HOME"),storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}


allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}
